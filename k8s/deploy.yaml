apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk042-my-app
  namespace: skala-practice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sk042-my-app
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/actuator/prometheus"
        update: 1ae2adf933c27354a572ce4c738d013f
      labels:
        app: sk042-my-app
    spec:
      serviceAccountName: default
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: # "반드시" 이 규칙을 따를 것
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - sk042-my-app
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: my-app
            image: amdp-registry.skala-ai.com/skala25a/sk042-my-app:2.0.0-4-4356ac747457
          imagePullPolicy: Always
          env:
            - name: USER_NAME
              value: sk042
            - name: NAMESPACE
              value: skala-practice
            - name: SPRING_PROFILES_ACTIVE
              value: prod
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
